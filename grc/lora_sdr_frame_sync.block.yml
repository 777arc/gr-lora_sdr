
id: lora_sdr_frame_sync
label: Frame sync
category: '[LoRa_RX]'
flags: [python,cpp]

parameters:
-   id: center_freq
    label: Center_freq
    dtype: int
-   id: bandwidth
    label: Bandwidth
    dtype: int
-   id: sf
    label: Sf
    dtype: int
-   id: impl_head
    label: Impl_head
    dtype: bool
-   id: sync_word
    label: Sync word
    dtype: int_vector
    default: 0x12
    hide: part
-   id: os_factor
    label: os_factor
    dtype: int
    default: 4


inputs:
-   domain: stream
    dtype: complex
-   domain: message
    id: frame_info

outputs:
-   domain: stream
    dtype: complex
-   domain: stream
    label: log
    dtype: float
    optional: 1

templates:
    imports: import gnuradio.lora_sdr as lora_sdr
    make: lora_sdr.frame_sync(${center_freq}, ${bandwidth}, ${sf}, ${impl_head}, ${sync_word}, ${os_factor})
cpp_templates:
    includes: ['#include "frame_sync.h"']
    declarations: 'lora_sdr::frame_sync::sptr ${id};'
    make: 'this->${id} = lora_sdr::frame_sync::make(${center_freq}, ${bandwidth}, ${sf}, ${impl_head}, ${sync_word}, ${os_factor});'
    translations:
        'False': 'false'
        'True': 'true'
        \[: '{'
        \]: '}'
 

documentation: |-
    Block taking care of the preamble detection, CFO and STO estimation and correction.
        Parameters:
            center_freq: the RF center frequency [Hz]
            Bandwidth: Bandwidth [Hz]
            sf: spreading factor
            impl_head: usage of an implicit header (explicit will be used otherwise)
            sync_word: The frame sync word. Can be specified as an hex or dec value (e.g. 0x12 or 18), or directly as the decimal values modulating the two network identifiers upchirps in the preamble (e.g [8,16]).
            os_factor: oversampling factor of the input stream.
        Input:
            in: stream of complex valued sampled
            frame_info: message produced by the block header decoder, containing the frame coding rate, the payload length, and the presence of a payload crc.

        Output:
            out: stream of complex samples with tags indicating the beginning of the header and preamble part of each frame alongside all information necessary to the demodulation, such as: spreading factor, coding rate, payload length, CRC presence,and CFO estimate.

file_format: 1
