# auto-generated by grc.converter

id: lora_sdr_hamming_enc
label: Hamming enc
category: '[LoRa_TX]'
flags: [python,cpp]

parameters:
-   id: cr
    label: CR
    dtype: int
    default: 1
-   id: sf
    label: SF
    dtype: int
    default: 7
-   id: legacy_sf56
    label: legacy_sf56
    dtype: bool
    hide: part
    default: False
    options: [False, True]

cpp_templates:
    includes: ['#include <gnuradio/lora_sdr/hamming_enc.h>']
    declarations: 'lora_sdr::hamming_enc::sptr ${id};'
    make: 'this->${id} = lora_sdr::hamming_enc::make(${cr}, ${sf}, ${legacy_sf56});'
    packages: ['gnuradio-lora_sdr']
    link: ['gnuradio::gnuradio-lora_sdr']
    translations:
        'False': 'false'
        'True': 'true'
        \[: '{'
        \]: '}'

inputs:
-   domain: stream
    dtype: byte

outputs:
-   domain: stream
    dtype: byte

templates:
    imports: import gnuradio.lora_sdr as lora_sdr
    make: lora_sdr.hamming_enc(${cr}, ${sf}, ${legacy_sf56})
    callbacks:
        - set_cr(${cr})
        - set_sf(${sf})

documentation: |-
    Append the parity bits to a nibble in accordance to the coding rate.
        Parameters:
            CR: coding rate
            SF: spreading factor
            legacy_sf56: Use legacy SF5/6 encoding  used by sx127x generation of chips
        Input:
            in: stream of nibble
        Output:
            out: stream of bytes containing a nibble of data and corresponding parity bits.

file_format: 1
