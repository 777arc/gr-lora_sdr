# auto-generated by grc.converter

id: lora_sdr_modulate
label: Modulate
category: '[LoRa_TX]'
flags: [python,cpp]

parameters:
-   id: sf
    label: SF
    dtype: int
    default: 'sf'
-   id: samp_rate
    label: Samp_rate
    dtype: int
-   id: bw
    label: BW
    dtype: int
-   id: sync_words
    label: Sync words
    dtype: int_vector
    hide: part
    default: 0x12
-   id: preamb_len
    label: Preamble_len
    dtype: int
    default: 8
    hide: part
-   id: frame_zero_padd
    label: Frame zero padding
    hide: part
    dtype: int
    default: int(20*2**sf*samp_rate/bw)
-   id: legacy_sf56
    label: legacy_sf56
    dtype: bool
    hide: part
    default: False
    options: [False, True]

cpp_templates:
    includes: ['#include <gnuradio/lora_sdr/modulate.h>']
    declarations: 'lora_sdr::modulate::sptr ${id};'
    make: 'this->${id} = lora_sdr::modulate::make(${sf}, ${samp_rate}, ${bw}, ${sync_words}, ${frame_zero_padd}, ${preamb_len}, ${legacy_sf56});'
    packages: ['gnuradio-lora_sdr']
    link: ['gnuradio::gnuradio-lora_sdr']
    translations:
        'False': 'false'
        'True': 'true'
        \[: '{'
        \]: '}'

inputs:
-   domain: stream
    dtype: int

outputs:
-   domain: stream
    dtype: complex

templates:
    imports: import gnuradio.lora_sdr as lora_sdr
    make: lora_sdr.modulate(${sf}, ${samp_rate}, ${bw}, ${sync_words}, ${frame_zero_padd},${preamb_len}, ${legacy_sf56})
    callbacks:
        - set_sf(${sf})
asserts:
- ${ (samp_rate/bw).is_integer()}
- ${frame_zero_padd>=0}

documentation: |-
    Add the preamble to the frame and modulate lora symbols according to the input decimal values.
        Parameters:
            sf: spreading factor
            samp_rate: sampling rate (need to be a integer multiple of the bandwidth)
            Bw: LoRa bandwidth
            preamb_len: Number of upchirps in the preamble. Should be in [6-65535] (default value 8);
            Frame zero padding: zero padding append after each frame. Value given in number of samples with a minimum of 1
            legacy_sf56: Use legacy SF5/6 encoding  used by sx127x generation of chips
        Input:
            in: stream of decimal symbol values
        Output:
            out: stream of complex valued samples

file_format: 1
